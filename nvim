set nocompatible

call plug#begin('~/.config/nvim/plugged')
Plug 'tomasr/molokai'           " Color scheme
Plug 'ctrlpvim/ctrlp.vim'       " Fuzzy finder
Plug 'tpope/vim-fugitive'       " Git wrapper
Plug 'pangloss/vim-javascript'  " JavaScript syntax
Plug 'elixir-lang/vim-elixir'   " Elixir synatx
Plug 'tpope/vim-surround'       " Surround pairs
Plug 'tomtom/tcomment_vim'      " Comment
call plug#end()

""" Basics
set number                      " Line numbers are good
set history=1000                " Store lots of :cmdline history
set clipboard+=unnamedplus      " Add system clipboard

let mapleader="\<SPACE>"        " Change leader key to SPACE

""" Appearance
colorscheme molokai
set colorcolumn=80              " Display 80th column
set nowrap                      " Don't wrap lines
set shiftwidth=2                " Indentation amount for < and > commands
set tabstop=2                   " Render TABs using this many spaces
set expandtab                   " Insert spaces when TAB is pressed

" Display trailing spaces
if &listchars ==# 'eol:$'
  set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
endif
set list                        " Show problematic characters

""" Status line
set showcmd                     " Show incomplete commands
set showmatch                   " Show matching brackets
set showmode                    " Show current mode
set ruler                       " Show the line and column numbers of the cursor

""" netrw
let g:netrw_browse_split = 4    " Open file in previous window
let g:netrw_preview = 1         " Preview file in vertical window
let g:netrw_alto = 0
let g:netrw_liststyle = 3       " Tree style listing
let g:netrw_winsize = 20        " Window size %

""" Search
set incsearch                   " Find the next match as we type the search
set hlsearch                    " Highlight searches by default
set ignorecase                  " Ignore case when searching...
set smartcase                   " ...unless we type a capital

" Use ag instead of grep
set grepprg=ag\ --nogroup\ --nocolor\ --column
set grepformat=%f:%l:%c%m

" Custom search
" Suppress grep output and show results in quickfix window
command! -nargs=+ -complete=file Ag execute 'silent grep! <args>' | copen | redraw!

""" Scroll
set splitbelow                  " Horizontal split below current
set splitright                  " Vertical split to right of current

if !&scrolloff
  set scrolloff=3               " Show next 3 lines while scrolling
endif

if !&sidescrolloff
  set sidescrolloff=5           " Show next 5 columns while side-scrolling
endif

""" Completion
set wildmenu                    " Enable cmd menu
set wildmode=list:longest,full  " Display cmd completion in list

""" Plugins
" Use ag in to find files (respects .gitignore)
let g:ctrlp_show_hidden = 1
let g:ctrlp_user_command = 'ag %s -l -g "" --hidden'
" Open file in new pane instead of switching to existing pane
let g:ctrlp_switch_buffer = 'et'
let g:ctrlp_extensions = ['tag']
let g:ctrlp_types = ['fil', 'buf', 'tag']


" Find alternate file with alt
function! Alt(path)
  let l:alternate = system("alt " . a:path)
  if empty(l:alternate)
    echo "No alternate file for " . a:path . " exists!"
  else
    exec ":e" . " " . l:alternate
  endif
endfunction

nnoremap <leader>pa :call Alt(expand("%"))<cr>

nnoremap <leader>ps :Ag ""<left>
