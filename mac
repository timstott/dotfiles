#!/usr/bin/env bash

set -e

echo "Homebrew - package manager"
if ! which brew > /dev/null 2>&1; then
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# $1 - brew package name (e.g. "neovim")
# $2 - command name (e.g. "nvim")
#
# when $2 is blank uses $1
function install_or_update {
  CMD="$2"
  if [ -z "$CMD" ]; then
    CMD="$1"
  fi

  # Check is package is installed
  if which $CMD > /dev/null 2>&1; then
    # Check is package is outdated
    if (brew outdated | grep -q package_name ); then
      brew upgrade $1
    fi
  else
    brew install $1
  fi
}

echo "stow - symlink manager"
install_or_update "stow"

echo "git - version control"
install_or_update "git"

echo "ag - code search"
install_or_update "ag"

echo "tmux - terminal multiplexer"
install_or_update "tmux"

# Use OS X clipboard inside tmux
echo "reattach-to-user-namespace"
install_or_update "reattach-to-user-namespace"

echo "ctags"
install_or_update "ctags"

echo "neovim - editor"
brew tap neovim/neovim
install_or_update "neovim" "nvim"

echo "vim-plug - vim package manager"
if [ ! -f $HOME/.local/share/nvim/site/autoload/plug.vim ]; then
  curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

echo "alt - alternate file finder"
brew tap "uptech/homebrew-oss"
install_or_update "uptech/oss/alt" "alt"

echo "emacs - no comment"
brew tap "railwaycat/emacsmacport"
install_or_update "'emacs-mac', args: ['with-spacemacs-icon', 'with-imagemagick']" "emacs"

# Ruby version manager
echo "rbenv - ruby version manager"
install_or_update "rbenv"

echo "nvm - node version manager"
mkdir -p $HOME/.nvm
install_or_update "nvm"

echo "yarn - node package manager"
install_or_update "yarn"

echo "fzf - fuzzy finder"
install_or_update "fzf"

echo "tldr - man pages with example"
install_or_update "tldr"

echo "golang"
mkdir -p $HOME/go
install_or_update "go"

echo "jq - json processor"
install_or_update "jq"

echo "sed"
# install_or_update "
